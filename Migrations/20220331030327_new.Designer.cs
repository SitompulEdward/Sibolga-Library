// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sibolga_Library.Data;

namespace Sibolga_Library.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220331030327_new")]
    partial class @new
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("Sibolga_Library.Models.Admin", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Alamat")
                        .HasColumnType("text");

                    b.Property<string>("Nama_Lengkap")
                        .HasColumnType("text");

                    b.Property<string>("No_Telp")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("RolesId")
                        .HasColumnType("varchar(767)");

                    b.HasKey("Email");

                    b.HasIndex("RolesId");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("Sibolga_Library.Models.Buku", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Email_Pemasok")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Gambar")
                        .HasColumnType("text");

                    b.Property<string>("Judul_Buku")
                        .HasColumnType("text");

                    b.Property<string>("Penerbit")
                        .HasColumnType("text");

                    b.Property<string>("Pengarang")
                        .HasColumnType("text");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Tahun_Terbit")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email_Pemasok");

                    b.ToTable("Buku");
                });

            modelBuilder.Entity("Sibolga_Library.Models.Detail_Pemasok", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email_Pemasok")
                        .HasColumnType("varchar(767)");

                    b.Property<int>("Jumlah_Poin")
                        .HasColumnType("int");

                    b.HasKey("No");

                    b.HasIndex("Email_Pemasok");

                    b.ToTable("Detail_Pemasok");
                });

            modelBuilder.Entity("Sibolga_Library.Models.Detail_Peminjaman", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BukuId")
                        .HasColumnType("varchar(767)");

                    b.Property<int>("Jumlah_Buku")
                        .HasColumnType("int");

                    b.Property<string>("PeminjamanId")
                        .HasColumnType("varchar(767)");

                    b.HasKey("No");

                    b.HasIndex("BukuId");

                    b.HasIndex("PeminjamanId");

                    b.ToTable("Detail_Peminjaman");
                });

            modelBuilder.Entity("Sibolga_Library.Models.Pemasok", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Alamat")
                        .HasColumnType("text");

                    b.Property<string>("Nama_Lengkap")
                        .HasColumnType("text");

                    b.Property<string>("No_Telp")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("RolesId")
                        .HasColumnType("varchar(767)");

                    b.HasKey("Email");

                    b.HasIndex("RolesId");

                    b.ToTable("Pemasok");
                });

            modelBuilder.Entity("Sibolga_Library.Models.Pembayaran", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("PeminjamanId")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<int>("Total_Bayar")
                        .HasColumnType("int");

                    b.HasKey("No");

                    b.HasIndex("PeminjamanId");

                    b.ToTable("Pembayaran");
                });

            modelBuilder.Entity("Sibolga_Library.Models.Peminjaman", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Email_Peminjam")
                        .HasColumnType("varchar(767)");

                    b.Property<DateTime>("Jatuh_Tempo")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Tgl_Peminjaman")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("Email_Peminjam");

                    b.ToTable("Peminjaman");
                });

            modelBuilder.Entity("Sibolga_Library.Models.Pengembalian", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(767)");

                    b.Property<int>("Denda")
                        .HasColumnType("int");

                    b.Property<string>("PeminjamanId")
                        .HasColumnType("varchar(767)");

                    b.Property<DateTime>("Tgl_Pengembalian")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("PeminjamanId");

                    b.ToTable("Pengembalian");
                });

            modelBuilder.Entity("Sibolga_Library.Models.Riwayat_Penarikan", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email_Pemasok")
                        .HasColumnType("varchar(767)");

                    b.Property<int>("Jumlah_Poin")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tgl_Penarikan")
                        .HasColumnType("datetime");

                    b.HasKey("No");

                    b.HasIndex("Email_Pemasok");

                    b.ToTable("Riwayat_Penarikan");
                });

            modelBuilder.Entity("Sibolga_Library.Models.Roles", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Sibolga_Library.Models.User", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Alamat")
                        .HasColumnType("text");

                    b.Property<string>("Nama_Lengkap")
                        .HasColumnType("text");

                    b.Property<string>("No_Telp")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("RolesId")
                        .HasColumnType("varchar(767)");

                    b.HasKey("Email");

                    b.HasIndex("RolesId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Sibolga_Library.Models.Admin", b =>
                {
                    b.HasOne("Sibolga_Library.Models.Roles", "FkRoles")
                        .WithMany()
                        .HasForeignKey("RolesId");

                    b.Navigation("FkRoles");
                });

            modelBuilder.Entity("Sibolga_Library.Models.Buku", b =>
                {
                    b.HasOne("Sibolga_Library.Models.Pemasok", "FkPemasok")
                        .WithMany()
                        .HasForeignKey("Email_Pemasok");

                    b.Navigation("FkPemasok");
                });

            modelBuilder.Entity("Sibolga_Library.Models.Detail_Pemasok", b =>
                {
                    b.HasOne("Sibolga_Library.Models.Pemasok", "FkEmail")
                        .WithMany()
                        .HasForeignKey("Email_Pemasok");

                    b.Navigation("FkEmail");
                });

            modelBuilder.Entity("Sibolga_Library.Models.Detail_Peminjaman", b =>
                {
                    b.HasOne("Sibolga_Library.Models.Buku", "FkBuku")
                        .WithMany()
                        .HasForeignKey("BukuId");

                    b.HasOne("Sibolga_Library.Models.Peminjaman", "FkPeminjaman")
                        .WithMany()
                        .HasForeignKey("PeminjamanId");

                    b.Navigation("FkBuku");

                    b.Navigation("FkPeminjaman");
                });

            modelBuilder.Entity("Sibolga_Library.Models.Pemasok", b =>
                {
                    b.HasOne("Sibolga_Library.Models.Roles", "FkRoles")
                        .WithMany()
                        .HasForeignKey("RolesId");

                    b.Navigation("FkRoles");
                });

            modelBuilder.Entity("Sibolga_Library.Models.Pembayaran", b =>
                {
                    b.HasOne("Sibolga_Library.Models.Peminjaman", "FkPeminjaman")
                        .WithMany()
                        .HasForeignKey("PeminjamanId");

                    b.Navigation("FkPeminjaman");
                });

            modelBuilder.Entity("Sibolga_Library.Models.Peminjaman", b =>
                {
                    b.HasOne("Sibolga_Library.Models.User", "FkEmail")
                        .WithMany()
                        .HasForeignKey("Email_Peminjam");

                    b.Navigation("FkEmail");
                });

            modelBuilder.Entity("Sibolga_Library.Models.Pengembalian", b =>
                {
                    b.HasOne("Sibolga_Library.Models.Peminjaman", "FkPeminjaman")
                        .WithMany()
                        .HasForeignKey("PeminjamanId");

                    b.Navigation("FkPeminjaman");
                });

            modelBuilder.Entity("Sibolga_Library.Models.Riwayat_Penarikan", b =>
                {
                    b.HasOne("Sibolga_Library.Models.Pemasok", "FkEmail")
                        .WithMany()
                        .HasForeignKey("Email_Pemasok");

                    b.Navigation("FkEmail");
                });

            modelBuilder.Entity("Sibolga_Library.Models.User", b =>
                {
                    b.HasOne("Sibolga_Library.Models.Roles", "FkRoles")
                        .WithMany()
                        .HasForeignKey("RolesId");

                    b.Navigation("FkRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
